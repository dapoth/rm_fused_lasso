#! python

def build(ctx):

    ctx(
	 features='run_py_script',
	 source='cgh_plot.py',
	 deps=ctx.path_to(ctx, 'IN_DATA', 'cgh.txt'),
	 target=[ctx.path_to(ctx, 'OUT_FIGURES', 'cgh_plot_raw.png'),ctx.path_to(ctx, 'OUT_FIGURES', 'cgh_plot_beta.png')]
      )

    ctx(
  	 features='run_py_script',
  	 source='plot_different_penaltys.py',
  	 target=ctx.path_to(ctx, 'OUT_FIGURES', 'different_penaltys.pdf')
        )

    ctx(
  	 features='run_py_script',
  	 source='plot_different_penalization_methods.py',
  	 target=ctx.path_to(ctx, 'OUT_FIGURES', 'different_penalization_methods.png')
        )

    ctx(
  	 features='run_py_script',
  	 source='create_analysis_table.py',
     deps=ctx.path_to(ctx, 'OUT_ANALYSIS', 'analysis_fused_large_blocks.pickle'), # m√ºssen wildcard machen
     target=ctx.path_to(ctx, 'OUT_FIGURES', 'mytable.tex')
        )

    ctx(
     features='run_py_script',
  	 source='lasso_solution_path_plot.py',
     target=ctx.path_to(ctx, 'OUT_FIGURES', 'plot_solutionpath_lasso.png')
    )

    ctx(
     features='run_py_script',
  	 source='fused_lasso_solution_path_plot.py',
     target=ctx.path_to(ctx, 'OUT_FIGURES', 'plot_solutionpath_fused_lasso.png')
    )
    ctx(
     features='run_py_script',
  	 source='signal_lasso_plot.py',
     target=ctx.path_to(ctx, 'OUT_FIGURES', 'signal_lasso_plot.png')
    )

    for sim in 'large_blocks', 'blocks_few_spikes', 'small_blocks', 'spikes':
            ctx(
             features='run_py_script',
          	 source='Heatmap.py',
             deps=[ctx.path_to(ctx, 'IN_MODEL_SPECS', '{}.json'.format(sim)), ctx.path_to(ctx, 'OUT_ANALYSIS', 'simulation_fused_{}.pickle'.format(sim))],
             target=ctx.path_to(ctx, 'OUT_FIGURES', 'heatmap_{}.png'.format(sim)),
             append=sim
               )
    ctx(
     features='run_py_script',
  	 source='create_runtimes_table.py',
     deps=[
     ctx.path_to(ctx, 'OUT_ANALYSIS', 'analysis_fused_large_blocks.pickle'),
     ctx.path_to(ctx, 'OUT_ANALYSIS', 'analysis_fused_small_blocks.pickle'),
     ctx.path_to(ctx, 'OUT_ANALYSIS', 'analysis_fused_spikes.pickle'),
     ctx.path_to(ctx, 'OUT_ANALYSIS', 'analysis_fused_blocks_few_spikes.pickle'),
     ],
     target=ctx.path_to(ctx, 'OUT_FIGURES', 'timetable.tex')
    )

    # ctx(
    # features='run_py_script',
    # source='project_dependency_graph.py',
    # target=ctx.path_to(ctx, 'OUT_FIGURES', 'dag')
    # )
    from src.final.project_dependency_graph import(
        make_project_dependency_graph
    )
    ctx.add_post_fun(make_project_dependency_graph)

    ctx(
     features='run_py_script',
  	 source='graph_to_png.py'
     #target=ctx.path_to(ctx, 'PROJECT_ROOT', 'project_graph.png')
    )
