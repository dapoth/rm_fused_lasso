#! python


def build(ctx):

    for model in 'primal', 'dual':

        # Illustrate use of run_py_script with automatic model specification.
        ctx(
            features='run_py_script',
            source='simulation.py',
            deps=[
                ctx.path_to(ctx, 'OUT_DATA', 'y.csv'),
                ctx.path_to(ctx, 'OUT_DATA', 'x.csv'),
                ctx.path_to(ctx, 'OUT_DATA', 'beta.csv'),
                ctx.path_to(ctx, 'OUT_DATA', 'eps.csv'),
                ctx.path_to(ctx, 'IN_MODEL_CODE', 'agent.py'),
                ctx.path_to(ctx, 'IN_MODEL_SPECS', '{}.json'.format(model)),
            ],
            target=[
                ctx.path_to(ctx, 'OUT_ANALYSIS', 'simulation_{}.pickle'.format(model)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', 'log', 'simulation_{}.log'.format(model))
            ],
            append=model,
            name='simulation_{}'.format(model)
        )

def build(ctx):

    for sim in 'one_block', 'two_blocks':
        ctx(
            features='run_py_script',
            source='true_sim.py',
            deps=[
                ctx.path_to(ctx, 'OUT_ANALYSIS', 'simulation_{}.pickle'.format(sim)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', 'simulation_{}.pickle'.format(sim)),
                ctx.path_to(ctx, 'IN_MODEL_SPECS', '{}.json'.format(sim)),
            ],

            append=sim
        )
