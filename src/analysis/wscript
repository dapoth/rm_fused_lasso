#! python

#doppelte for schleife f√ºr effective for type in lasso ,fused, fusion:
def build(ctx):



    for reg in 'lasso', 'fused', 'fusion':
        for sim in 'blocks_levels', 'blocks_few_spikes', 'blocks_many_spikes', 'spikes':
            ctx(
                features = 'run_py_script',
                source = 'simulation.py',
                deps = [
                    ctx.path_to(ctx, 'OUT_ANALYSIS', 'data_{}_{}.pickle'.format(reg,sim)),
                    ctx.path_to(ctx, 'IN_MODEL_SPECS', '{}.json'.format(sim)),
                ],
                target = [
                    #ctx.path_to(ctx, 'OUT_ANALYSIS', 'beta_hat_monte_Carlo_{}.pickle'.format(sim)),
                    ctx.path_to(ctx, 'OUT_ANALYSIS', 'simulation_{}_{}.pickle'.format(reg,sim)),
                    ctx.path_to(ctx, 'OUT_ANALYSIS', 'analysis_{}_{}.pickle'.format(reg,sim))
                    #ctx.path_to(ctx, 'OUT_ANALYSIS', 'heatmap_{}.png'.format(sim))
                ],
                append = [reg, sim]
            )


# def build(ctx):
#
#     ctx(
#     features = 'run_py_script',
#     source = 'monte_carlo.py'
#     )
